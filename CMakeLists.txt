# Changed version nr to get access to CMAKE_MSVC_RUNTIME_LIBRARY
# I needed it for the googletest fix
cmake_minimum_required (VERSION 3.15)
project(KrattTestAssignment LANGUAGES C CXX)
set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

# Fix to get googletest to compile
if(MSVC)
  set(CMAKE_MSVC_RUNTIME_LIBRARY "MultiThreadedDebugDLL" CACHE STRING "" FORCE)
endif()

# LiteNetLibPP fork https://github.com/RedFox20/LiteNetLibPP
add_subdirectory(${CMAKE_CURRENT_SOURCE_DIR}/libs/LiteNetLibPP)

# GLFW+OpenGL https://github.com/glfw/glfw.git
find_package(OpenGL REQUIRED)
set(GLFW_BUILD_DOCS OFF CACHE BOOL "" FORCE)
set(GLFW_BUILD_TESTS OFF CACHE BOOL "" FORCE)
set(GLFW_BUILD_EXAMPLES OFF CACHE BOOL "" FORCE)
add_subdirectory(${CMAKE_CURRENT_SOURCE_DIR}/libs/glfw)

# Dear ImGui https://github.com/ocornut/imgui
set(IMGUI_DIR ${CMAKE_CURRENT_SOURCE_DIR}/libs/imgui)
file(GLOB IMGUI_SOURCES ${IMGUI_DIR}/*.cpp)
add_library(imgui STATIC ${IMGUI_SOURCES} ${IMGUI_DIR}/backends/imgui_impl_glfw.cpp
                                          ${IMGUI_DIR}/backends/imgui_impl_opengl3.cpp)
target_include_directories(imgui PUBLIC ${IMGUI_DIR} ${IMGUI_DIR}/backends)

# Fix to get IMGUI to compile.
set(IMGUI_LIBS OpenGL::GL glfw)
if(NOT WIN32)
  list(APPEND IMGUI_LIBS dl)
endif()
target_link_libraries(imgui PUBLIC ${IMGUI_LIBS})   

# Mavlink2 autogenerated headers https://github.com/mavlink/c_library_v2.git
# no source files
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/libs/mavlink)

# Google Test https://github.com/google/googletest.git
# LiteNetLibPP already includes gtest, enable if using another sockets library
#add_subdirectory(${CMAKE_CURRENT_SOURCE_DIR}/libs/googletest)

# GCS
add_executable(GCS src/gcs_main.cpp src/gcs.cpp src/udp_server.cpp src/listener_server.cpp)
target_link_libraries(GCS PRIVATE lnl imgui)
target_include_directories(GCS PUBLIC ${CMAKE_SOURCE_DIR}/include ${CMAKE_SOURCE_DIR}/libs/mavlink/common)

# Drone
add_executable(Drone src/drone_main.cpp src/drone.cpp src/udp_client.cpp src/listener_client.cpp)
target_link_libraries(Drone PRIVATE lnl)
target_include_directories(Drone PUBLIC ${CMAKE_SOURCE_DIR}/include ${CMAKE_SOURCE_DIR}/libs/mavlink/common)

# Unit Tests
enable_testing()
add_subdirectory(${CMAKE_CURRENT_SOURCE_DIR}/test)